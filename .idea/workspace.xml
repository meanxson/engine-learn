<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="engine-learn" targetName="EngineCore" />
      <config projectName="engine-learn" targetName="glfw" />
      <config projectName="engine-learn" targetName="glad" />
      <config projectName="engine-learn" targetName="uninstall" />
      <config projectName="engine-learn" targetName="spdlog" />
      <config projectName="engine-learn" targetName="update_mappings" />
      <config projectName="engine-learn" targetName="Editor" />
      <config projectName="engine-learn" targetName="ImGui" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Default" ENABLED="true" GENERATION_DIR="$PROJECT_DIR$/build" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="50fe5ca0-5d12-4161-9c2d-e8ca52be65e9" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/EngineCore/includes/EngineCore/Render/VertexBuffer.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/EngineCore/src/EngineCore/Render/VertexBuffer.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Editor/src/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/Editor/src/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/EngineCore/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/EngineCore/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/EngineCore/includes/EngineCore/ShaderProgram.h" beforeDir="false" afterPath="$PROJECT_DIR$/EngineCore/includes/EngineCore/Render/ShaderProgram.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/EngineCore/src/EngineCore/Render/ShaderProgram.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/EngineCore/src/EngineCore/Render/ShaderProgram.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/EngineCore/src/EngineCore/Window.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/EngineCore/src/EngineCore/Window.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/.cmake/api/v1/reply/codemodel-v2-fcc2adb4abc9b068f0d7.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/build/.cmake/api/v1/reply/index-2023-12-22T02-52-26-0249.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/build/.cmake/api/v1/reply/target-Editor-Release-10ea67980bb373bb4a28.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/build/.cmake/api/v1/reply/target-EngineCore-Release-993e7a35781890e13521.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/build/CMakeFiles/Makefile2" beforeDir="false" afterPath="$PROJECT_DIR$/build/CMakeFiles/Makefile2" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/CMakeFiles/progress.marks" beforeDir="false" afterPath="$PROJECT_DIR$/build/CMakeFiles/progress.marks" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/Editor/CMakeFiles/Editor.dir/compiler_depend.internal" beforeDir="false" afterPath="$PROJECT_DIR$/build/Editor/CMakeFiles/Editor.dir/compiler_depend.internal" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/Editor/CMakeFiles/Editor.dir/compiler_depend.make" beforeDir="false" afterPath="$PROJECT_DIR$/build/Editor/CMakeFiles/Editor.dir/compiler_depend.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/Editor/CMakeFiles/progress.marks" beforeDir="false" afterPath="$PROJECT_DIR$/build/Editor/CMakeFiles/progress.marks" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/EngineCore/CMakeFiles/EngineCore.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/build/EngineCore/CMakeFiles/EngineCore.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/EngineCore/CMakeFiles/EngineCore.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/build/EngineCore/CMakeFiles/EngineCore.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/EngineCore/CMakeFiles/EngineCore.dir/cmake_clean.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/build/EngineCore/CMakeFiles/EngineCore.dir/cmake_clean.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/EngineCore/CMakeFiles/EngineCore.dir/compiler_depend.internal" beforeDir="false" afterPath="$PROJECT_DIR$/build/EngineCore/CMakeFiles/EngineCore.dir/compiler_depend.internal" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/EngineCore/CMakeFiles/EngineCore.dir/compiler_depend.make" beforeDir="false" afterPath="$PROJECT_DIR$/build/EngineCore/CMakeFiles/EngineCore.dir/compiler_depend.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/EngineCore/CMakeFiles/EngineCore.dir/link.txt" beforeDir="false" afterPath="$PROJECT_DIR$/build/EngineCore/CMakeFiles/EngineCore.dir/link.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/EngineCore/CMakeFiles/EngineCore.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/build/EngineCore/CMakeFiles/EngineCore.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/EngineCore/CMakeFiles/ImGui.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/build/EngineCore/CMakeFiles/ImGui.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/EngineCore/CMakeFiles/progress.marks" beforeDir="false" afterPath="$PROJECT_DIR$/build/EngineCore/CMakeFiles/progress.marks" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/EngineCore/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/build/EngineCore/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/EngineCore/glad/CMakeFiles/glad.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/build/EngineCore/glad/CMakeFiles/glad.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/EngineCore/glfw/src/CMakeFiles/glfw.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/build/EngineCore/glfw/src/CMakeFiles/glfw.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/EngineCore/glfw/src/CMakeFiles/update_mappings.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/build/EngineCore/glfw/src/CMakeFiles/update_mappings.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/EngineCore/spdlog/CMakeFiles/spdlog.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/build/EngineCore/spdlog/CMakeFiles/spdlog.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/build/Testing/Temporary/LastTest.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/bin/imgui.ini" beforeDir="false" afterPath="$PROJECT_DIR$/build/bin/imgui.ini" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/engine-learn.cbp" beforeDir="false" afterPath="$PROJECT_DIR$/build/engine-learn.cbp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/glfw" beforeDir="false" afterPath="$PROJECT_DIR$/external/glfw" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/glfw/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/external/glfw/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/glfw/docs/Doxyfile.in" beforeDir="false" afterPath="$PROJECT_DIR$/external/glfw/docs/Doxyfile.in" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/glfw/docs/input.dox" beforeDir="false" afterPath="$PROJECT_DIR$/external/glfw/docs/input.dox" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/glfw/docs/intro.dox" beforeDir="false" afterPath="$PROJECT_DIR$/external/glfw/docs/intro.dox" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/glfw/docs/moving.dox" beforeDir="false" afterPath="$PROJECT_DIR$/external/glfw/docs/moving.dox" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/glfw/docs/vulkan.dox" beforeDir="false" afterPath="$PROJECT_DIR$/external/glfw/docs/vulkan.dox" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/glfw/include/GLFW/glfw3.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/glfw/include/GLFW/glfw3.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/glfw/src/context.c" beforeDir="false" afterPath="$PROJECT_DIR$/external/glfw/src/context.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/glfw/src/init.c" beforeDir="false" afterPath="$PROJECT_DIR$/external/glfw/src/init.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/glfw/src/win32_init.c" beforeDir="false" afterPath="$PROJECT_DIR$/external/glfw/src/win32_init.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/glfw/src/win32_joystick.c" beforeDir="false" afterPath="$PROJECT_DIR$/external/glfw/src/win32_joystick.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/imgui" beforeDir="false" afterPath="$PROJECT_DIR$/external/imgui" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/imgui/docs/CHANGELOG.txt" beforeDir="false" afterPath="$PROJECT_DIR$/external/imgui/docs/CHANGELOG.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/imgui/docs/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/external/imgui/docs/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/imgui/docs/TODO.txt" beforeDir="false" afterPath="$PROJECT_DIR$/external/imgui/docs/TODO.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/imgui/examples/example_apple_metal/iOS/LaunchScreen.storyboard" beforeDir="false" afterPath="$PROJECT_DIR$/external/imgui/examples/example_apple_metal/iOS/LaunchScreen.storyboard" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/imgui/examples/example_apple_metal/macOS/MainMenu.storyboard" beforeDir="false" afterPath="$PROJECT_DIR$/external/imgui/examples/example_apple_metal/macOS/MainMenu.storyboard" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/imgui/imconfig.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/imgui/imconfig.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/imgui/imgui.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/external/imgui/imgui.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/imgui/imgui.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/imgui/imgui.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/imgui/imgui_demo.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/external/imgui/imgui_demo.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/imgui/imgui_draw.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/external/imgui/imgui_draw.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/imgui/imgui_internal.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/imgui/imgui_internal.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/imgui/imgui_tables.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/external/imgui/imgui_tables.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/imgui/imgui_widgets.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/external/imgui/imgui_widgets.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/imgui/imstb_rectpack.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/imgui/imstb_rectpack.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/imgui/imstb_textedit.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/imgui/imstb_textedit.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/imgui/imstb_truetype.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/imgui/imstb_truetype.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/spdlog" beforeDir="false" afterPath="$PROJECT_DIR$/external/spdlog" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/spdlog/include/spdlog/fmt/bundled/chrono.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/spdlog/include/spdlog/fmt/bundled/chrono.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/spdlog/include/spdlog/fmt/bundled/core.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/spdlog/include/spdlog/fmt/bundled/core.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/spdlog/include/spdlog/fmt/bundled/format-inl.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/spdlog/include/spdlog/fmt/bundled/format-inl.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/spdlog/include/spdlog/fmt/bundled/format.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/spdlog/include/spdlog/fmt/bundled/format.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/spdlog/include/spdlog/fmt/bundled/os.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/spdlog/include/spdlog/fmt/bundled/os.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/spdlog/include/spdlog/fmt/bundled/ranges.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/spdlog/include/spdlog/fmt/bundled/ranges.h" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Default" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="OCResolveContextSettings">
    <option name="configuration" value="0-Release-EngineCore" />
  </component>
  <component name="ProjectId" id="26DbVgRcaGpiS1X3OVfh6Gcxd2n" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Khakim\Desktop\HobbyCode\engine-learn\EngineCore\includes\EngineCore\Render" />
      <recent name="C:\Users\Khakim\Desktop\HobbyCode\engine-learn\EngineCore\includes\EngineCore" />
      <recent name="C:\Users\Khakim\Desktop\HobbyCode\engine-learn\EngineCore\src\EngineCore\Render" />
      <recent name="F:\Projects\C++\engine\engine-learn\EngineCore\includes\EngineCore" />
      <recent name="F:\Projects\C++\engine\engine-learn\EngineCore\includes" />
    </key>
  </component>
  <component name="RunManager" selected="CMake Application.Editor">
    <configuration default="true" type="GradleAppRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="com.jetbrains.cidr.cpp.gradle.execution.GradleNativeBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Editor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="engine-learn" TARGET_NAME="Editor" CONFIG_NAME="Default" RUN_TARGET_PROJECT_NAME="engine-learn" RUN_TARGET_NAME="Editor">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="EngineCore" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="engine-learn" TARGET_NAME="EngineCore" CONFIG_NAME="Default">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ImGui" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="engine-learn" TARGET_NAME="ImGui" CONFIG_NAME="Default">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="glad" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="engine-learn" TARGET_NAME="glad" CONFIG_NAME="Default">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="glfw" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="engine-learn" TARGET_NAME="glfw" CONFIG_NAME="Default">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="spdlog" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="engine-learn" TARGET_NAME="spdlog" CONFIG_NAME="Default">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="uninstall" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="engine-learn" TARGET_NAME="uninstall" CONFIG_NAME="Default">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="update_mappings" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="engine-learn" TARGET_NAME="update_mappings" CONFIG_NAME="Default">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake Application.Editor" />
      <item itemvalue="CMake Application.EngineCore" />
      <item itemvalue="CMake Application.ImGui" />
      <item itemvalue="CMake Application.glad" />
      <item itemvalue="CMake Application.uninstall" />
      <item itemvalue="CMake Application.glfw" />
      <item itemvalue="CMake Application.update_mappings" />
      <item itemvalue="CMake Application.spdlog" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="50fe5ca0-5d12-4161-9c2d-e8ca52be65e9" name="Changes" comment="" />
      <created>1646961130100</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1646961130100</updated>
      <workItem from="1646961131577" duration="1365000" />
      <workItem from="1647018514955" duration="5481000" />
      <workItem from="1647058363570" duration="2000" />
      <workItem from="1647166175071" duration="23000" />
      <workItem from="1647181991610" duration="3765000" />
      <workItem from="1647207427889" duration="7457000" />
      <workItem from="1647268618067" duration="137000" />
      <workItem from="1647299968290" duration="7957000" />
      <workItem from="1703208948026" duration="4856000" />
      <workItem from="1703226555094" duration="6221000" />
      <workItem from="1703266147704" duration="2140000" />
      <workItem from="1703470804301" duration="1223000" />
      <workItem from="1703555397005" duration="705000" />
      <workItem from="1704215013086" duration="2000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VCPKGProject">
    <isAutomaticEditVcpkgJson value="false" />
    <isAutomaticCheckingOnLaunch value="false" />
    <isAutomaticFoundErrors value="true" />
    <isAutomaticFoundErrors value="true" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
</project>